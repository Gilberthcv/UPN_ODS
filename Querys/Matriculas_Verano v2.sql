--Matriculas_Verano_
SELECT DISTINCT
	PS.*, BN.PROGRAM, BN.PROGRAM_DESC, BN.CAMPUS_DESC, BN.FECHA_REGISTRO_CURSOS, BN.TIPO_ESTUDIANTE AS TIPO_ESTUDIANTE_BANNER
	, COALESCE(T.TIPO_ESTUDIANTE,'Nuevo') AS TIPO_ESTUDIANTE_CALCULADO, BN.CREDITOS, BN.CURSOS, BN.CUOTA_INICIAL, BN.ARANCEL
FROM ( SELECT PIDM, ID, CONCAT(CONCAT(SPRIDEN_LAST_NAME,', '),SPRIDEN_FIRST_NAME) AS NOMBRE_ESTUDIANTE, PERIODO, FECHA_CONTABLE
			, MAX(CASE 
				WHEN CARGO = 'CUOTA INICIAL' AND INVOICE_AMOUNT = 0 THEN FECHA_EMISION
				WHEN CARGO = 'CUOTA INICIAL' AND ESTADO_AR = 'O' AND INVOICE_AMOUNT <> SALDO THEN COALESCE(FECHA_PAGO,FECHA_CONTABLE)
				WHEN CARGO = 'CUOTA INICIAL' THEN FECHA_PAGO
				END) AS FECHA_PAGO
		FROM ODSMGR.PS_MATRICULA_CUOTAINICIAL, ODSMGR.LOE_SPRIDEN
		WHERE PIDM = SPRIDEN_PIDM AND SPRIDEN_CHANGE_IND IS NULL AND CARGO = 'CUOTA INICIAL'
			AND PERIODO IN ('221402','221502')	--INGRESAR PERIODO
		GROUP BY PIDM, ID, CONCAT(CONCAT(SPRIDEN_LAST_NAME,', '),SPRIDEN_FIRST_NAME), PERIODO, FECHA_CONTABLE
		) PS
	, ( SELECT DISTINCT a.*
			, SUM(CASE WHEN SUBSTR(b.DETAIL_CODE,1,2) = 'T1' OR SUBSTR(b.CROSSREF_DETAIL_CODE,1,2) = 'T1' THEN b.BALANCE ELSE 0 END)
		          OVER(PARTITION BY b.ACCOUNT_UID,b.ACADEMIC_PERIOD) AS CUOTA_INICIAL
		    , SUM(CASE WHEN SUBSTR(b.DETAIL_CODE,1,2) = 'TA' OR SUBSTR(b.CROSSREF_DETAIL_CODE,1,2) = 'TA' THEN b.BALANCE ELSE 0 END)
		          OVER(PARTITION BY b.ACCOUNT_UID,b.ACADEMIC_PERIOD) AS ARANCEL
		FROM (SELECT DISTINCT a.PERSON_UID, a.ACADEMIC_PERIOD, a.PROGRAM, a.PROGRAM_DESC, a.CAMPUS_DESC
		          , MIN(b.SECTION_ADD_DATE) OVER(PARTITION BY b.PERSON_UID,b.ACADEMIC_PERIOD) AS FECHA_REGISTRO_CURSOS
		          , CASE a.STUDENT_POPULATION
						WHEN 'N' THEN 
							CASE 
								WHEN a.STUDENT_LEVEL = 'UG' AND c.COHORT = 'NEW_REING' THEN 'Nuevo Reingreso'
								WHEN a.STUDENT_LEVEL = 'UG' AND c.COHORT = 'REINGRESO' THEN 'Reingreso'
								WHEN a.ADMISSIONS_POPULATION = 'II' THEN 'Intercambio IN'
								ELSE 'Nuevo' END
						WHEN 'C' THEN 
							CASE 
								WHEN a.STUDENT_LEVEL = 'UG' AND c.COHORT = 'NEW_REING' THEN 'Nuevo Reingreso'
								WHEN a.STUDENT_LEVEL = 'UG' AND c.COHORT = 'REINGRESO' THEN 'Reingreso'
								WHEN a.ADMISSIONS_POPULATION = 'II' THEN 'Intercambio IN'
								WHEN a.ADMISSIONS_POPULATION <> 'RE' AND d.STUDENT_ATTRIBUTE = 'TINT' THEN 'Intercambio OUT'
								WHEN e.ACTIVITY = 'DTO' AND d.STUDENT_ATTRIBUTE = 'TINT' THEN 'Doble Titulacion OUT'
								WHEN e.ACTIVITY = 'ITO' AND d.STUDENT_ATTRIBUTE = 'TINT' THEN 'Intercambio OUT'
								ELSE 'Continuo' END
						ELSE a.STUDENT_POPULATION END AS TIPO_ESTUDIANTE
		          , SUM(b.COURSE_CREDITS) OVER(PARTITION BY b.PERSON_UID,b.ACADEMIC_PERIOD) AS CREDITOS
		          , COUNT(b.COURSE_REFERENCE_NUMBER) OVER(PARTITION BY b.PERSON_UID,b.ACADEMIC_PERIOD) AS CURSOS
		      FROM ODSMGR.ACADEMIC_STUDY a, 
		           ODSMGR.STUDENT_COURSE b, 
		           ODSMGR.STUDENT_COHORT c, 
		           ODSMGR.STUDENT_ATTRIBUTE d, 
		           ODSMGR.STUDENT_ACTIVITY e
		      WHERE a.PERSON_UID = b.PERSON_UID(+) AND a.ACADEMIC_PERIOD = b.ACADEMIC_PERIOD(+) AND b.TRANSFER_COURSE_IND(+) = 'N' AND b.REGISTRATION_STATUS(+) IN ('RE','RW','RA','WC','RF','RO','IA')
		          AND a.PERSON_UID = c.PERSON_UID(+) AND a.ACADEMIC_PERIOD = c.ACADEMIC_PERIOD(+) AND c.COHORT_ACTIVE_IND(+) = 'Y' AND c.COHORT(+) IN ('NEW_REING','REINGRESO')
		          AND a.PERSON_UID = d.PERSON_UID(+) AND a.ACADEMIC_PERIOD = d.ACADEMIC_PERIOD(+) AND d.STUDENT_ATTRIBUTE(+) IN ('TINT','ADOS','DDOS','DLEN','DMAT')
		          AND a.PERSON_UID = e.PERSON_UID(+) AND a.ACADEMIC_PERIOD = e.ACADEMIC_PERIOD(+) AND e.ACTIVITY(+) IN ('DTO','ITO')
		          AND a.ENROLLMENT_STATUS IN ('EL','RF','RO','SE') AND a.STUDENT_LEVEL = 'UG' AND a.ACADEMIC_PERIOD IN ('221402','221502')	--INGRESAR PERIODO
			) a,
			ODSMGR.RECEIVABLE_ACCOUNT_DETAIL b
		WHERE a.PERSON_UID = b.ACCOUNT_UID(+) AND a.ACADEMIC_PERIOD = b.ACADEMIC_PERIOD(+)) BN
	, ODSMGR.LOE_TIPO_ESTUDIANTE T
WHERE PS.PIDM = BN.PERSON_UID AND PS.PERIODO = BN.ACADEMIC_PERIOD
	AND PS.PIDM = T.SHRTCKN_PIDM(+) AND PS.PERIODO = T.PERIODO_ACTUAL(+)
;