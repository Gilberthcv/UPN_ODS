SELECT DISTINCT
    a.PERSON_UID AS PIDM,
    e.SPRIDEN_ID AS ID,
    CONCAT ( e.SPRIDEN_LAST_NAME, ', ' || e.SPRIDEN_FIRST_NAME ) AS ESTUDIANTE,
    b.STUDENT_ATTRIBUTE AS TERCERA,
    CASE
        WHEN a.SUBJECT = c.SSBSECT_SUBJ_CODE AND a.COURSE_NUMBER = c.SSBSECT_CRSE_NUMB
            THEN CONCAT ( a.SUBJECT, a.COURSE_NUMBER )
        ELSE NULL
    END AS COD_CURSO_TERCERA,
    CASE
        WHEN a.SUBJECT = c.SSBSECT_SUBJ_CODE AND a.COURSE_NUMBER = c.SSBSECT_CRSE_NUMB
            THEN a.COURSE_TITLE_SHORT
        ELSE NULL
    END AS CURSO_TERCERA,
    a.ACADEMIC_PERIOD AS PERIODO,
    d.CAMPUS AS COD_CAMPUS,
    d.CAMPUS_DESC AS CAMPUS,
    d.PROGRAM AS COD_PROGRAMA,
    d.PROGRAM_DESC AS PROGRAMA,
    a.TOTAL_CREDITOS
FROM
    (((( SELECT 
            PERSON_UID,
            ID,
            ACADEMIC_PERIOD,
            SUBJECT,
            COURSE_NUMBER,
            COURSE_REFERENCE_NUMBER,
            COURSE_TITLE_SHORT,
            SUM(COURSE_CREDITS)
                OVER( PARTITION BY
                    PERSON_UID,
                    ACADEMIC_PERIOD ) AS TOTAL_CREDITOS
        FROM
            STUDENT_COURSE
        WHERE
            REGISTRATION_STATUS IN ( 'RE', 'RW' ) AND
            COURSE_CREDITS > 0 ) a
        INNER JOIN STUDENT_ATTRIBUTE b ON
            a.PERSON_UID = b.PERSON_UID AND
            a.ACADEMIC_PERIOD = b.ACADEMIC_PERIOD )
        LEFT JOIN LOE_REPEAT_COURSE_CRN c ON
            a.PERSON_UID = c.SFRSTCR_PIDM AND
            a.ACADEMIC_PERIOD = c.SFRSTCR_TERM_CODE AND
            a.SUBJECT = c.SSBSECT_SUBJ_CODE AND
            a.COURSE_NUMBER = c.SSBSECT_CRSE_NUMB AND
            c.COURSE_COUNT = 3 )
        LEFT JOIN ACADEMIC_STUDY d ON
            a.PERSON_UID = d.PERSON_UID AND
            a.ACADEMIC_PERIOD = d.ACADEMIC_PERIOD AND
            d.STUDENT_LEVEL = 'UG' ) --INGRESAR NIVEL
        LEFT JOIN LOE_SPRIDEN e ON
            a.PERSON_UID = e.SPRIDEN_PIDM AND
            e.SPRIDEN_CHANGE_IND IS NULL
WHERE     
    b.STUDENT_ATTRIBUTE = '3RAV' AND
    a.ACADEMIC_PERIOD IN ( '218413', '218512' ); --INGRESAR PERIODO