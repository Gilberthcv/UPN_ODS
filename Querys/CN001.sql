
--BASE CN001
SELECT SUM(A1.MONTO_TOTAL) FROM (
SELECT
    NVL(TO_CHAR(H.INVOICE_DT, 'YYYYMMDD'), '-1') TRAN_DATE_DIMKEY
    , CASE
        WHEN H.PRODUCT = '52' THEN '50'
        WHEN H.PRODUCT = ' ' THEN 'NULL_LEVEL'
        WHEN H.PRODUCT IS NULL THEN 'NULL_LEVEL'
        ELSE H.PRODUCT END AS LEVEL_DIMKEY
    , NVL(H.PO_REF, 'NULL_PERIOD') PERIOD_DIMKEY
    , CASE WHEN H.OPERATING_UNIT <> ' ' THEN H.OPERATING_UNIT
        ELSE 'NULL_CAMPUS' END AS CAMPUS_DIMKEY
    , H.BILL_TYPE_ID BILL_TYPE_DIMKEY, H.BILL_STATUS BILL_STATUS_DIMKEY, H.INVOICE
    , CASE WHEN H.MONTO_IMPUESTO <> 0 THEN H.MONTO_BI_CALCULADO ELSE 0 END AS MONTO_AFECTO
    , CASE WHEN H.MONTO_IMPUESTO = 0 THEN H.MONTO_BI_CALCULADO ELSE 0 END AS MONTO_INAFECTO
    , H.MONTO_IMPUESTO, (H.MONTO_BI_CALCULADO + H.MONTO_IMPUESTO) AS MONTO_TOTAL
    , H.JOURNAL_DATE_BI JRNLBI_DATE_DIMKEY, H.ACCOUNTING_DT ACCT_DATE_DIMKEY, H.JOURNAL_DATE_AR JRNLAR_DATE_DIMKEY
FROM (
SELECT DISTINCT
    C.INVOICE, C.BILL_STATUS, C.BILL_TYPE_ID, C.INVOICE_DT, C.PO_REF, C.TOT_VAT, C.PRODUCT, C.OPERATING_UNIT
    , CASE WHEN C.TOT_VAT <> 0 AND G.ENTRY_TYPE = 'WOC' AND G.ENTRY_REASON = 'A-DIR' 
        THEN C.TOT_VAT *-1 
        ELSE C.TOT_VAT END AS MONTO_IMPUESTO
    , CASE WHEN C.BILL_TYPE_ID IN ('F1','B1','D1','D2','C1','C2') 
        THEN (CASE WHEN G.ENTRY_TYPE IN ('WO','WOC') AND G.ENTRY_REASON = 'A-DIR' 
                THEN D.MONETARY_AMOUNT ELSE D.MONETARY_AMOUNT *-1 END)
        ELSE D.MONETARY_AMOUNT END AS MONTO_BI_CALCULADO
    , D.MONETARY_AMOUNT, D.LINE_SEQ_NUM, D.ACCOUNT ACCOUNT_BI, D.JOURNAL_ID JOURNAL_ID_BI, D.JOURNAL_DATE JOURNAL_DATE_BI
    , G.ACCOUNTING_DT, G.JOURNAL_ID JOURNAL_ID_AR, G.JOURNAL_DATE JOURNAL_DATE_AR
FROM (SELECT DISTINCT 
            A.BUSINESS_UNIT, A.INVOICE, A.BILL_STATUS, A.BILL_TYPE_ID, A.INVOICE_DT, A.PO_REF, A.TOT_VAT
            , MAX(B.PRODUCT) OVER(PARTITION BY B.INVOICE) AS PRODUCT
            , MAX(B.OPERATING_UNIT) OVER(PARTITION BY B.INVOICE) AS OPERATING_UNIT
        FROM PS_BI_HDR A, PS_BI_LINE_DST B
        WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.INVOICE = B.INVOICE AND A.BUSINESS_UNIT = 'PER03' AND A.INVOICE_DT BETWEEN '01/05/2019' AND '01/05/2019') C
    , PS_BI_ACCT_ENTRY D
    , (SELECT E.BUSINESS_UNIT, E.ITEM, E.ITEM_LINE, E.ITEM_SEQ_NUM, E.ENTRY_TYPE, E.ENTRY_REASON, E.ACCOUNTING_DT, F.JOURNAL_ID, F.JOURNAL_DATE
        FROM (SELECT BUSINESS_UNIT, ITEM, ITEM_LINE, ITEM_SEQ_NUM, ENTRY_TYPE, ENTRY_REASON, ACCOUNTING_DT
                    , MAX(CASE WHEN ENTRY_TYPE IN ('WO','WOC') AND ENTRY_REASON = 'A-DIR' THEN 'WO_WOC_A-DIR' END) OVER(PARTITION BY ITEM) AS WO_WOC_A_DIR
                FROM PS_ITEM_ACTIVITY WHERE BUSINESS_UNIT = 'PER03' AND ENTRY_TYPE <> 'PY' AND ACCOUNTING_DT BETWEEN '01/05/2019' AND '01/05/2019') E
            , PS_ITEM_DST F
        WHERE E.BUSINESS_UNIT = F.BUSINESS_UNIT(+) AND E.ITEM = F.ITEM(+) AND E.ITEM_LINE = F.ITEM_LINE(+) AND E.ITEM_SEQ_NUM = F.ITEM_SEQ_NUM(+)
            AND E.WO_WOC_A_DIR = 'WO_WOC_A-DIR'
            AND F.LEDGER(+) = 'ACTUALS' AND F.JOURNAL_DATE(+) BETWEEN '01/05/2019' AND '01/05/2019') G
WHERE C.BUSINESS_UNIT = D.BUSINESS_UNIT(+) AND C.INVOICE = D.INVOICE(+)
    AND D.ACCT_ENTRY_TYPE(+) IN ('DR','RR') AND D.APPL_JRNL_ID(+) = 'BI_BILLING' AND D.JOURNAL_ID(+) <> ' ' AND D.JOURNAL_ID(+) IS NOT NULL
    AND D.JOURNAL_DATE(+) BETWEEN '01/05/2019' AND '01/05/2019'
    AND C.BUSINESS_UNIT = G.BUSINESS_UNIT(+) AND C.INVOICE = G.ITEM(+)
    AND NVL(D.JOURNAL_ID,G.JOURNAL_ID) IS NOT NULL
    AND CASE WHEN G.ENTRY_TYPE(+) = 'WOC' AND G.ENTRY_REASON(+) = 'REF' THEN 'Y' ELSE 'N' END = 'N') H
    ) A1;


--QUERY CN001
SELECT SUM(A1.MONTO_TOTAL) FROM (
SELECT
    NVL(TO_CHAR(Z.INVOICE_DT, 'YYYYMMDD'), '-1') TRAN_DATE_DIMKEY
    , CASE
        WHEN Z.PRODUCT = '52' THEN '50'
        WHEN Z.PRODUCT = ' ' THEN 'NULL_LEVEL'
        WHEN Z.PRODUCT IS NULL THEN 'NULL_LEVEL'
        ELSE Z.PRODUCT END AS LEVEL_DIMKEY
    , NVL(Z.PO_REF, 'NULL_PERIOD') PERIOD_DIMKEY
    , CASE WHEN Z.OPERATING_UNIT <> ' ' THEN Z.OPERATING_UNIT
        ELSE 'NULL_CAMPUS' END AS CAMPUS_DIMKEY
    , Z.BILL_TYPE_ID BILL_TYPE_DIMKEY, Z.BILL_STATUS BILL_STATUS_DIMKEY, Z.INVOICE
    , CASE WHEN Z.MONTO_IMPUESTO <> 0 THEN Z.MONTO_BI_CALCULADO ELSE 0 END AS MONTO_AFECTO
    , CASE WHEN Z.MONTO_IMPUESTO = 0 THEN Z.MONTO_BI_CALCULADO ELSE 0 END AS MONTO_INAFECTO
    , Z.MONTO_IMPUESTO, (Z.MONTO_BI_CALCULADO + Z.MONTO_IMPUESTO) AS MONTO_TOTAL
    , Z.JOURNAL_DATE_BI JRNLBI_DATE_DIMKEY, Z.ACCOUNTING_DT ACCT_DATE_DIMKEY, Z.JOURNAL_DATE_AR JRNLAR_DATE_DIMKEY
FROM (
SELECT DISTINCT
    C.INVOICE, C.BILL_STATUS, C.BILL_TYPE_ID, C.INVOICE_DT, C.PO_REF, C.TOT_VAT, C.DUE_DT, C.PRODUCT, C.OPERATING_UNIT
    , C.BILL_TO_CUST_ID, REPLACE(CONCAT(CONCAT(I.NAME2,' '),I.NAME1),'/',' ') AS NOMBRE_COMPLETO, I.SUBCUST_QUAL1
    , I.CORPORATE_CUST_ID, REPLACE(CONCAT(CONCAT(J.NAME2,' '),J.NAME1),'/',' ') AS NOMBRE_COMPLETO_CORPORATE
    , K.INVOICE2, L.VAT_RGSTRN_ID, M.INSTALL_NBR, NVL(M.INVOICE,C.INVOICE) AS INVOICE_PLANTILLA
    , SUBSTR(N.TEXT254,LENGTH(N.TEXT254)-9) AS ORIGINAL_INVOICE, O.INVOICE2 AS ORIGINAL_INVOICE2
    , CASE WHEN R.DUE_DT IS NULL 
        THEN ( CASE WHEN C.PYMNT_TERMS_CD IN ('000','0000','00000') 
            THEN C.DUE_DT 
            ELSE Q.DUE_DT END ) 
        ELSE R.DUE_DT END AS FECHA_VENCIMIENTO
    , CASE WHEN C.TOT_VAT <> 0 AND G.ENTRY_TYPE = 'WOC' AND G.ENTRY_REASON = 'A-DIR' 
        THEN C.TOT_VAT *-1 
        ELSE C.TOT_VAT END AS MONTO_IMPUESTO
    , CASE WHEN C.BILL_TYPE_ID IN ('F1','B1','D1','D2','C1','C2') 
        THEN (CASE WHEN G.ENTRY_TYPE IN ('WO','WOC') AND G.ENTRY_REASON = 'A-DIR' 
                THEN D.MONETARY_AMOUNT ELSE D.MONETARY_AMOUNT *-1 END)
        ELSE D.MONETARY_AMOUNT END AS MONTO_BI_CALCULADO
    , D.MONETARY_AMOUNT, D.LINE_SEQ_NUM, D.ACCOUNT ACCOUNT_BI, D.JOURNAL_ID JOURNAL_ID_BI, D.JOURNAL_DATE JOURNAL_DATE_BI
    , H.DESCR, H.REV_RECOG_BASIS
    , CASE H.REV_RECOG_BASIS 
            WHEN 'CHG' THEN 'Rango F Inicial/Final' 
            WHEN 'INV' THEN 'Fecha Factura' ELSE H.REV_RECOG_BASIS END AS REV_RECOG_BASIS_DESC
    , G.ACCOUNTING_DT, G.JOURNAL_ID JOURNAL_ID_AR, G.JOURNAL_DATE JOURNAL_DATE_AR
FROM (SELECT DISTINCT 
            A.BUSINESS_UNIT, A.INVOICE, A.BILL_STATUS, A.BILL_TYPE_ID, A.INVOICE_DT, A.PO_REF, A.TOT_VAT, A.DUE_DT
            , A.BILL_TO_CUST_ID, A.PYMNT_TERMS_CD
            , MAX(B.PRODUCT) OVER(PARTITION BY B.INVOICE) AS PRODUCT
            , MAX(B.OPERATING_UNIT) OVER(PARTITION BY B.INVOICE) AS OPERATING_UNIT
        FROM PS_BI_HDR A, PS_BI_LINE_DST B
        WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.INVOICE = B.INVOICE AND A.BUSINESS_UNIT = 'PER03' AND A.INVOICE_DT BETWEEN '01/05/2019' AND '01/05/2019') C
    , PS_BI_ACCT_ENTRY D
    , (SELECT E.BUSINESS_UNIT, E.ITEM, E.ITEM_LINE, E.ITEM_SEQ_NUM, E.ENTRY_TYPE, E.ENTRY_REASON, E.ACCOUNTING_DT, F.JOURNAL_ID, F.JOURNAL_DATE
        FROM (SELECT BUSINESS_UNIT, ITEM, ITEM_LINE, ITEM_SEQ_NUM, ENTRY_TYPE, ENTRY_REASON, ACCOUNTING_DT
                    , MAX(CASE WHEN ENTRY_TYPE IN ('WO','WOC') AND ENTRY_REASON = 'A-DIR' THEN 'WO_WOC_A-DIR' END) OVER(PARTITION BY ITEM) AS WO_WOC_A_DIR
                FROM PS_ITEM_ACTIVITY WHERE BUSINESS_UNIT = 'PER03' AND ENTRY_TYPE <> 'PY' AND ACCOUNTING_DT BETWEEN '01/05/2019' AND '01/05/2019') E
            , PS_ITEM_DST F
        WHERE E.BUSINESS_UNIT = F.BUSINESS_UNIT(+) AND E.ITEM = F.ITEM(+) AND E.ITEM_LINE = F.ITEM_LINE(+) AND E.ITEM_SEQ_NUM = F.ITEM_SEQ_NUM(+)
            AND E.WO_WOC_A_DIR = 'WO_WOC_A-DIR'
            AND F.LEDGER(+) = 'ACTUALS' AND F.JOURNAL_DATE(+) BETWEEN '01/05/2019' AND '01/05/2019') G
    , PS_BI_LINE H, PS_CUSTOMER I, PS_CUSTOMER J, PS_LI_GBL_BI_INV K, PS_CUST_VAT_REG L, PS_BI_INSTALL_SCHE M, PS_BI_LINE_NOTE N, PS_LI_GBL_BI_INV O
    , PS_PAY_TRMS_NET P, PS_PAY_TRMS_TIME Q, PS_ITEM R
WHERE C.BUSINESS_UNIT = D.BUSINESS_UNIT(+) AND C.INVOICE = D.INVOICE(+)
    AND C.BUSINESS_UNIT = H.BUSINESS_UNIT AND C.INVOICE = H.INVOICE
    AND H.LINE_SEQ_NUM = (SELECT MIN(H1.LINE_SEQ_NUM) FROM PS_BI_LINE H1
                            WHERE H.BUSINESS_UNIT = H1.BUSINESS_UNIT AND H.INVOICE = H1.INVOICE
                            GROUP BY H1.INVOICE)
    AND C.BILL_TO_CUST_ID = I.CUST_ID(+)
    AND I.CORPORATE_CUST_ID = J.CUST_ID(+)
    AND C.BUSINESS_UNIT = K.BUSINESS_UNIT(+) AND C.INVOICE = K.INVOICE(+)
    AND C.BILL_TO_CUST_ID = L.CUST_ID(+)
    AND C.INVOICE = M.GENERATED_INVOICE(+)
    AND C.INVOICE = N.INVOICE(+) AND N.TEXT254(+) LIKE '%ORIGINAL_INVOICE:%'
    AND SUBSTR(N.TEXT254,LENGTH(N.TEXT254)-9) = O.INVOICE(+)
    AND C.BUSINESS_UNIT = P.SETID(+) AND C.PYMNT_TERMS_CD = P.PYMNT_TERMS_CD(+) AND P.EFFDT(+) <= CURRENT_DATE
    AND P.SETID = Q.SETID(+) AND P.PAY_TRMS_TIME_ID = Q.PAY_TRMS_TIME_ID(+)
    AND C.BUSINESS_UNIT = R.BUSINESS_UNIT(+) AND C.INVOICE = R.ITEM(+)
    AND D.ACCT_ENTRY_TYPE(+) IN ('DR','RR') AND D.APPL_JRNL_ID(+) = 'BI_BILLING' AND D.JOURNAL_ID(+) <> ' ' AND D.JOURNAL_ID(+) IS NOT NULL
    AND D.JOURNAL_DATE(+) BETWEEN '01/05/2019' AND '01/05/2019'
    AND C.BUSINESS_UNIT = G.BUSINESS_UNIT(+) AND C.INVOICE = G.ITEM(+)
    AND NVL(D.JOURNAL_ID,G.JOURNAL_ID) IS NOT NULL
    AND CASE WHEN G.ENTRY_TYPE(+) = 'WOC' AND G.ENTRY_REASON(+) = 'REF' THEN 'Y' ELSE 'N' END = 'N') Z
    ) A1;