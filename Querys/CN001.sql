
--BASE CN001
SELECT SUM(A1.MONTO_TOTAL) FROM (
SELECT
    NVL(TO_CHAR(H.INVOICE_DT, 'YYYYMMDD'), '-1') TRAN_DATE_DIMKEY
    , CASE
        WHEN H.PRODUCT = '52' THEN '50'
        WHEN H.PRODUCT = ' ' THEN 'NULL_LEVEL'
        WHEN H.PRODUCT IS NULL THEN 'NULL_LEVEL'
        ELSE H.PRODUCT END AS LEVEL_DIMKEY
    , NVL(H.PO_REF, 'NULL_PERIOD') PERIOD_DIMKEY
    , CASE WHEN H.OPERATING_UNIT <> ' ' THEN H.OPERATING_UNIT
        ELSE 'NULL_CAMPUS' END AS CAMPUS_DIMKEY
    , H.BILL_TYPE_ID BILL_TYPE_DIMKEY, H.BILL_STATUS BILL_STATUS_DIMKEY, H.INVOICE
    , CASE WHEN H.MONTO_IMPUESTO <> 0 THEN H.MONTO_BI_CALCULADO ELSE 0 END AS MONTO_AFECTO
    , CASE WHEN H.MONTO_IMPUESTO = 0 THEN H.MONTO_BI_CALCULADO ELSE 0 END AS MONTO_INAFECTO
    , H.MONTO_IMPUESTO, (H.MONTO_BI_CALCULADO + H.MONTO_IMPUESTO) AS MONTO_TOTAL
    , H.JOURNAL_DATE_BI JRNLBI_DATE_DIMKEY, H.ACCOUNTING_DT ACCT_DATE_DIMKEY, H.JOURNAL_DATE_AR JRNLAR_DATE_DIMKEY
FROM (
SELECT DISTINCT
    C.INVOICE, C.BILL_STATUS, C.BILL_TYPE_ID, C.INVOICE_DT, C.PO_REF, C.TOT_VAT, C.PRODUCT, C.OPERATING_UNIT
    , CASE WHEN C.TOT_VAT <> 0 AND G.ENTRY_TYPE = 'WOC' AND G.ENTRY_REASON = 'A-DIR' 
        THEN C.TOT_VAT *-1 
        ELSE C.TOT_VAT END AS MONTO_IMPUESTO
    , CASE WHEN C.BILL_TYPE_ID IN ('F1','B1','D1','D2','C1','C2') 
        THEN (CASE WHEN G.ENTRY_TYPE IN ('WO','WOC') AND G.ENTRY_REASON = 'A-DIR' 
                THEN D.MONETARY_AMOUNT ELSE D.MONETARY_AMOUNT *-1 END)
        ELSE D.MONETARY_AMOUNT END AS MONTO_BI_CALCULADO
    , D.MONETARY_AMOUNT, D.LINE_SEQ_NUM, D.ACCOUNT ACCOUNT_BI, D.JOURNAL_ID JOURNAL_ID_BI, D.JOURNAL_DATE JOURNAL_DATE_BI
    , G.ACCOUNTING_DT, G.JOURNAL_ID JOURNAL_ID_AR, G.JOURNAL_DATE JOURNAL_DATE_AR
FROM (SELECT DISTINCT 
            A.BUSINESS_UNIT, A.INVOICE, A.BILL_STATUS, A.BILL_TYPE_ID, A.INVOICE_DT, A.PO_REF, A.TOT_VAT
            , MAX(B.PRODUCT) OVER(PARTITION BY B.INVOICE) AS PRODUCT
            , MAX(B.OPERATING_UNIT) OVER(PARTITION BY B.INVOICE) AS OPERATING_UNIT
        FROM PS_BI_HDR A, PS_BI_LINE_DST B
        WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.INVOICE = B.INVOICE AND A.BUSINESS_UNIT = 'PER03' AND A.INVOICE_DT BETWEEN '01/05/2019' AND '31/05/2019') C
    , PS_BI_ACCT_ENTRY D
    , (SELECT E.BUSINESS_UNIT, E.ITEM, E.ITEM_LINE, E.ITEM_SEQ_NUM, E.ENTRY_TYPE, E.ENTRY_REASON, E.ACCOUNTING_DT, F.JOURNAL_ID, F.JOURNAL_DATE
        FROM (SELECT BUSINESS_UNIT, ITEM, ITEM_LINE, ITEM_SEQ_NUM, ENTRY_TYPE, ENTRY_REASON, ACCOUNTING_DT
                    , MAX(CASE WHEN ENTRY_TYPE IN ('WO','WOC') AND ENTRY_REASON = 'A-DIR' THEN 'WO_WOC_A-DIR' END) OVER(PARTITION BY ITEM) AS WO_WOC_A_DIR
                FROM PS_ITEM_ACTIVITY WHERE BUSINESS_UNIT = 'PER03' AND ENTRY_TYPE <> 'PY' AND ACCOUNTING_DT BETWEEN '01/05/2019' AND '31/05/2019') E
            , PS_ITEM_DST F
        WHERE E.BUSINESS_UNIT = F.BUSINESS_UNIT(+) AND E.ITEM = F.ITEM(+) AND E.ITEM_LINE = F.ITEM_LINE(+) AND E.ITEM_SEQ_NUM = F.ITEM_SEQ_NUM(+)
            AND E.WO_WOC_A_DIR = 'WO_WOC_A-DIR'
            AND F.LEDGER(+) = 'ACTUALS' AND F.JOURNAL_DATE(+) BETWEEN '01/05/2019' AND '31/05/2019') G
WHERE C.BUSINESS_UNIT = D.BUSINESS_UNIT(+) AND C.INVOICE = D.INVOICE(+)
    AND D.ACCT_ENTRY_TYPE(+) IN ('DR','RR') AND D.APPL_JRNL_ID(+) = 'BI_BILLING' AND D.JOURNAL_ID(+) <> ' ' AND D.JOURNAL_ID(+) IS NOT NULL
    AND D.JOURNAL_DATE(+) BETWEEN '01/05/2019' AND '31/05/2019'
    AND C.BUSINESS_UNIT = G.BUSINESS_UNIT(+) AND C.INVOICE = G.ITEM(+)
    AND NVL(D.JOURNAL_ID,G.JOURNAL_ID) IS NOT NULL
    AND CASE WHEN G.ENTRY_TYPE(+) = 'WOC' AND G.ENTRY_REASON(+) = 'REF' THEN 'Y' ELSE 'N' END = 'N') H
    ) A1;


--QUERY CN001
SELECT SUM(A1.MONTO_TOTAL) FROM (
SELECT
    NVL(TO_CHAR(H.INVOICE_DT, 'YYYYMMDD'), '-1') TRAN_DATE_DIMKEY
    , CASE
        WHEN H.PRODUCT = '52' THEN '50'
        WHEN H.PRODUCT = ' ' THEN 'NULL_LEVEL'
        WHEN H.PRODUCT IS NULL THEN 'NULL_LEVEL'
        ELSE H.PRODUCT END AS LEVEL_DIMKEY
    , NVL(H.PO_REF, 'NULL_PERIOD') PERIOD_DIMKEY
    , CASE WHEN H.OPERATING_UNIT <> ' ' THEN H.OPERATING_UNIT
        ELSE 'NULL_CAMPUS' END AS CAMPUS_DIMKEY
    , H.BILL_TYPE_ID BILL_TYPE_DIMKEY, H.BILL_STATUS BILL_STATUS_DIMKEY, H.INVOICE
    , CASE WHEN H.MONTO_IMPUESTO <> 0 THEN H.MONTO_BI_CALCULADO ELSE 0 END AS MONTO_AFECTO
    , CASE WHEN H.MONTO_IMPUESTO = 0 THEN H.MONTO_BI_CALCULADO ELSE 0 END AS MONTO_INAFECTO
    , H.MONTO_IMPUESTO, (H.MONTO_BI_CALCULADO + H.MONTO_IMPUESTO) AS MONTO_TOTAL
    , H.JOURNAL_DATE_BI JRNLBI_DATE_DIMKEY, H.ACCOUNTING_DT ACCT_DATE_DIMKEY, H.JOURNAL_DATE_AR JRNLAR_DATE_DIMKEY
FROM (
SELECT DISTINCT
    V1.INVOICE, V1.BILL_STATUS, V1.BILL_TYPE_ID, V1.INVOICE_DT, V1.PO_REF, V1.TOT_VAT, V1.PRODUCT, V1.OPERATING_UNIT
    , CASE WHEN V1.TOT_VAT <> 0 AND G.ENTRY_TYPE = 'WOC' AND G.ENTRY_REASON = 'A-DIR' 
        THEN V1.TOT_VAT *-1 
        ELSE V1.TOT_VAT END AS MONTO_IMPUESTO
    , CASE WHEN V1.BILL_TYPE_ID IN ('F1','B1','D1','D2','C1','C2') 
        THEN (CASE WHEN G.ENTRY_TYPE IN ('WO','WOC') AND G.ENTRY_REASON = 'A-DIR' 
                THEN V1.MONETARY_AMOUNT ELSE V1.MONETARY_AMOUNT *-1 END)
        ELSE V1.MONETARY_AMOUNT END AS MONTO_BI_CALCULADO
    , V1.MONETARY_AMOUNT, V1.LINE_SEQ_NUM, V1.ACCOUNT ACCOUNT_BI, V1.JOURNAL_ID JOURNAL_ID_BI, V1.JOURNAL_DATE JOURNAL_DATE_BI
    , G.ACCOUNTING_DT, G.JOURNAL_ID JOURNAL_ID_AR, G.JOURNAL_DATE JOURNAL_DATE_AR
FROM (SELECT DISTINCT 
            A.BUSINESS_UNIT, A.INVOICE, A.BILL_STATUS, A.BILL_TYPE_ID, A.INVOICE_DT, A.PO_REF, A.TOT_VAT
            , MAX(B.PRODUCT) OVER(PARTITION BY B.INVOICE) AS PRODUCT
            , MAX(B.OPERATING_UNIT) OVER(PARTITION BY B.INVOICE) AS OPERATING_UNIT
            , C.MONETARY_AMOUNT, C.LINE_SEQ_NUM, C.ACCOUNT, C.JOURNAL_ID, C.JOURNAL_DATE
        FROM PS_BI_HDR A, PS_BI_LINE_DST B, PS_BI_ACCT_ENTRY C
        WHERE A.BUSINESS_UNIT = 'PER03' AND A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.INVOICE = B.INVOICE
            AND A.BUSINESS_UNIT = C.BUSINESS_UNIT(+) AND A.INVOICE = C.INVOICE(+)
            AND C.ACCT_ENTRY_TYPE(+) IN ('DR','RR') AND C.APPL_JRNL_ID(+) = 'BI_BILLING' AND C.JOURNAL_ID(+) <> ' ' AND C.JOURNAL_ID(+) IS NOT NULL
            AND A.INVOICE_DT BETWEEN '01/05/2019' AND '31/05/2019'
            AND C.JOURNAL_DATE(+) BETWEEN '01/05/2019' AND '31/05/2019') V1
    , (SELECT V2.BUSINESS_UNIT, V2.ITEM, V2.ITEM_LINE, V2.ITEM_SEQ_NUM, V2.ENTRY_TYPE, V2.ENTRY_REASON, V2.ACCOUNTING_DT, V2.JOURNAL_ID, V2.JOURNAL_DATE
            , MAX(CASE WHEN V2.ENTRY_TYPE IN ('WO','WOC') AND V2.ENTRY_REASON = 'A-DIR' THEN 'WO_WOC_A-DIR' END) OVER(PARTITION BY V2.ITEM) AS WO_WOC_A_DIR
        FROM (SELECT D.BUSINESS_UNIT, D.ITEM, E.ITEM_LINE, E.ITEM_SEQ_NUM, E.ENTRY_TYPE, E.ENTRY_REASON, E.ACCOUNTING_DT, F.JOURNAL_ID, F.JOURNAL_DATE
              FROM PS_ITEM_ACTIVITY D, PS_ITEM_ACTIVITY E, PS_ITEM_DST F
              WHERE D.BUSINESS_UNIT = 'PER03' AND D.ENTRY_TYPE IN ('WO','WOC') AND D.ENTRY_REASON = 'A-DIR'
                  AND D.BUSINESS_UNIT = E.BUSINESS_UNIT AND D.ITEM = E.ITEM AND E.ENTRY_TYPE <> 'PY'
                  AND D.BUSINESS_UNIT = F.BUSINESS_UNIT(+) AND D.ITEM = F.ITEM(+) AND E.ITEM_LINE = F.ITEM_LINE(+)
                  AND E.ITEM_SEQ_NUM = F.ITEM_SEQ_NUM(+) AND F.LEDGER(+) = 'ACTUALS'
                  AND E.ACCOUNTING_DT BETWEEN '01/05/2019' AND '31/05/2019'
                  AND F.JOURNAL_DATE(+) BETWEEN '01/05/2019' AND '31/05/2019') V2) G
WHERE V1.BUSINESS_UNIT = G.BUSINESS_UNIT(+) AND V1.INVOICE = G.ITEM(+)
    AND G.WO_WOC_A_DIR(+)= 'WO_WOC_A-DIR'
    AND NVL(V1.JOURNAL_ID,G.JOURNAL_ID) IS NOT NULL
    AND CASE WHEN G.ENTRY_TYPE(+) = 'WOC' AND G.ENTRY_REASON(+) = 'REF' THEN 'Y' ELSE 'N' END = 'N') H
    ) A1;

